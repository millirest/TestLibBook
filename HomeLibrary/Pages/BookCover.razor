@inject IHttpClientFactory HttpClientFactory
@using HtmlAgilityPack


    <div style="width:220px;height:320px;background:#eee;display:flex;align-items:center;justify-content:center;">Нет обложки</div>


@code {
    [Parameter] public string? Path { get; set; }
}

@* 




Не работает, потому что "Blazor WebAssembly cannot fetch and parse HTML from other sites due to CORS."

@inject IHttpClientFactory HttpClientFactory
@using HtmlAgilityPack

@if (coverUrl != null)
{
    <img src="@coverUrl" width="220" height="320" style="object-fit:cover;" />
}
else
{
    <div style="width:220px;height:320px;background:#eee;display:flex;align-items:center;justify-content:center;">Нет обложки</div>
}

@code {
    [Parameter] public string? Path { get; set; }
    private string? coverUrl;

    protected override async Task OnParametersSetAsync()
    {
        coverUrl = await GetCoverUrlAsync(Path);
    }

    private async Task<string?> GetCoverUrlAsync(string? bookUrl)
    {
        if (string.IsNullOrWhiteSpace(bookUrl))
            return null;

        try
        {
            var client = HttpClientFactory.CreateClient();
            var html = await client.GetStringAsync(bookUrl);

            var doc = new HtmlDocument();
            doc.LoadHtml(html);

            var imgNode = doc.DocumentNode.SelectSingleNode("//*[@itemprop='image']");
            var imgUrl = imgNode?.GetAttributeValue("src", null);

            if (!string.IsNullOrEmpty(imgUrl) && !Uri.IsWellFormedUriString(imgUrl, UriKind.Absolute))
            {
                var baseUri = new Uri(bookUrl);
                imgUrl = new Uri(baseUri, imgUrl).ToString();
            }

            return imgUrl;
        }
        catch
        {
            return null;
        }
    }
}


 *@
